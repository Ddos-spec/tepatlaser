---
/**
 * @file src/components/Breadcrumbs.astro
 * @description A reusable breadcrumbs component for navigation and SEO.
 */

export interface Crumb {
  name: string;
  url: string;
}

export interface Props {
  crumbs: Crumb[];
}

const { crumbs } = Astro.props;

// Generate JSON-LD schema for breadcrumbs
const schema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": crumbs.map((crumb, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": crumb.name,
    "item": new URL(crumb.url, Astro.site).href
  }))
};
---

<nav aria-label="Breadcrumb" class="bg-gray-50 py-3">
  <div class="container-custom">
    <ol class="inline-flex items-center space-x-1 md:space-x-2">
      {crumbs.map((crumb, index) => (
        <li class="inline-flex items-center">
          {index > 0 && (
            <svg class="w-4 h-4 text-gray-400 mx-1" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
            </svg>
          )}
          <a
            href={crumb.url}
            class={`text-sm font-medium ${index === crumbs.length - 1 ? 'text-gray-500 cursor-default' : 'text-gray-700 hover:text-blue-600'}`}
            aria-current={index === crumbs.length - 1 ? 'page' : undefined}
          >
            {index === 0 ? (
              <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
              </svg>
            ) : ''}
            {crumb.name}
          </a>
        </li>
      ))}
    </ol>
  </div>
</nav>

<!-- Inject JSON-LD schema into the page head -->
<script type="application/ld+json" set:html={JSON.stringify(schema)} />
